<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rants | @Lenciel]]></title>
  <link href="https://lenciel.com/blog/categories/rants/atom.xml" rel="self"/>
  <link href="https://lenciel.com/"/>
  <updated>2016-04-06T15:14:06+08:00</updated>
  <id>https://lenciel.com/</id>
  <author>
    <name><![CDATA[Lenciel Li]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[关于工作与生活]]></title>
    <link href="https://lenciel.com/2015/10/the-solution-of-work-life-balance/"/>
    <updated>2015-10-04T00:06:16+08:00</updated>
    <id>https://lenciel.com/2015/10/the-solution-of-work-life-balance</id>
    <content type="html"><![CDATA[<p><img src="/downloads/images/2015_10/dilbert_work_life_balance.png" title="Don't touch me..." alt="work life balance" /></p>

<p>前面说了，<a href="http://lenciel.cn/2015/10/the-myth-of-work-life-balance/">Work Life Balance的神话其实并不靠谱</a>。</p>

<p>毫不奇怪，在本座自己发觉这点之前，我的家人们早就发现了这点。所以当柳青患癌这样的消息一出来，总会有人跟我说，“你看看，难道你觉得她这样值吗？”</p>

<p>有趣的是，出了这样的消息，创业的人特别是老板们也会问同样的问题：“你觉得，她这样值吗？”</p>

<p>其实这样的消息真会让我有挺多想法的，所以不如在这里整理一下，以便今后不管是谁有了三长两短，或者是自己真的不幸中招，都可以直接拿出来交卷。</p>

<p>简单地回答那个问题：我不知道值不值，这是她自己才清楚的事情。</p>

<a name="L.................."></a>
<h2>勤奋不会杀人</h2>

<p>我记得看过卡斯帕罗夫和卡尔波夫对局之后的一个采访，记者问他们除开象棋之外有什么爱好。</p>

<p>你们都见过那些跑文体档的记者，这也算是个常规的问题。结果卡尔波夫憋了半天，说，“集邮”。</p>

<p>然后卡斯帕罗夫憋了三个半天，说，“没有”。</p>

<p>这并不是个例，很多职业选手他们把自己的全部身心都放在了自己的项目上。</p>

<p>再比如我很喜欢的作家村上春树。有人问他为什么一定要关了酒吧去写小说，他的回答是：</p>

<blockquote>
<p>无论做什么事儿，一旦去做，我非得全力以赴不可，否则不得安心。将店铺随意交托给某个人，自己躲到别处去写小说，这种讨巧的事情我做不来。竭尽全力埋头苦干，还是干不好，就可以心安理得地撂开手了。然而，如果因为模棱两可、半心半意而以失败告终，懊悔之情只怕久久无法拂去。</p>
</blockquote>


<p>很多心灵鸡汤会把这些误读为”你一定要找到自己感兴趣的事情”，这其实很容易让人跳进火坑。从接触到感兴趣并不难，比如踢球，比如唱歌，比如写作，比如编程，很多人接触了会觉得很有兴趣。然而从爱好变成职业，就需要反复枯燥的练习并且和其他人进行竞争。如果你为一件自己仅仅是感兴趣的事情就调转了职业方向，很多时候都会感到后悔莫及。</p>

<p>要坚持下来真正熬出头，需要极度勤奋和高度专注，即便你的目标不是变成顶尖高手（那么大概不需要<a href="http://baike.baidu.com/view/3244949.htm">10000小时</a>），过程也会非常苦。</p>

<p>但熬过就是另一番天地。</p>

<p>所以看到柳青或者李开复的新闻，嘴上送着祝福，私下却暗自庆幸”你看我平平淡淡多好”的心态最好别有。患癌这事情面前，我国基本还是人人平等（没仔细研究过，记得主要是环境、食品和生活习惯诱发的基因里面的坏道造成的），治起来却是天壤之别：据说中国人要让自己全家所有人遇到大病时都能得到良好的治疗并体面地死去，大概需要2000万。我相信这对于柳青或者李开复来说问题不大，而“平平淡淡”的你路还很长。</p>

<p>还是放心赶路吧：勤奋根本不会杀人，相反，我认识的大多数勤奋的人，都是健康且快乐的。</p>

<p>因为他们不蛮干。</p>

<a name="L.................."></a>
<h2>勤奋不是蛮干</h2>

<p>什么是蛮干呢？</p>

<ul>
<li>没有主观能动性只是应付时间的行为是敷衍，这样的人很可恶。</li>
<li>有主观能动性但只会堆砌时间的行为是蛮干，这样的人很可怜。</li>
</ul>


<p>在我看来996上班制度或者规定每周上班80个小时就是鼓励蛮干。</p>

<p>看看阿里的人<a href="http://www.zhihu.com/question/23272060">自己怎么说996</a>你就知道，如果你鼓励的是蛮干，那总是蛮干都得不到：很多人只是敷衍而已。</p>

<p>这件事情曾经给了我很大的困扰。</p>

<p>工作上我一直被给予了很大的自由度，我也会给大家很大的自由度。</p>

<p>老板对一切都非常满意，但却有一个心结：集体加班不够多。</p>

<p>他常常也不好直说（因为实际效果上看目前是比以前输出高了不少），经常是在时机合适的时候提点一下我：“我们今天开会出来公司里面空空荡荡的”或者“过去某某是经常在公司干到12点以后的”。</p>

<p>我能理解他，他在著名的H公司干了十几年，管了几千人的研发团队。现在出来创业，他和其他几个管理层也确实很拼。市场突围，产品研发的压力这么大，难免从自己的办公室走出来看到空空荡荡的屋子有些不开心。</p>

<p>但我也确实没法同意建立打卡考勤或者集体加班这样奇怪的制度。</p>

<p>花更多的时间就可以多做出来点儿什么的想法，对研发团队是不太有效的。</p>

<p>就算是读书的时候，也总是有一些人你看他/她花的时间不多，但就是考试考得好。</p>

<p>反过来，也总是有一些学生，花再多的时间都没有用。</p>

<p>如果你稍微仔细看看后面这类学生为什么会有这样的处境，总会发现老师、学生和家长这三个角色至少有一个人心思已经不在提高成绩这件事情上了：可能是老师嫌学生烂，可能是学生嫌老师烂，可能是家长嫌学生烂&hellip;可能是每个人都觉得其他两个很烂&hellip;</p>

<p>研发需要看的是输出，是把问题搞定的能力，而不是谁在公司完成了三餐、球类运动、热门新闻追踪和存在感建设。</p>

<p>我见过很多想弯道超车的公司，搞运动般的加班，结果导致动作变形，连应该有的成绩都没法做出来。</p>

<p>这并不奇怪。</p>

<p>你去软件园地铁站门口随便拦住那帮背双肩包的，问问他们自己觉得质量不错又能上线的项目哪个是靠加班加出来的。</p>

<a name="L........................"></a>
<h2>所以工作和生活？</h2>

<p>所以工作和生活的节奏，是很私人的事情。</p>

<p>这意味着两方面的意思：对于个人来说，你应该保证自己有选择它的权力。而对于组织来说，不应该对个人进行过分的干涉。</p>

<p>组织和个人努力的方向，都应该是让有效时间内输出最大化：说简单一点儿，即便有必要加班，目的都应该是为了能尽早达到按时下班，而不是在公司里面形成一种”多花点儿时间就能做出更多东西”的错觉。</p>

<p><img src="https://lenciel.com/downloads/images/2015_10/no_one_wants_more_work.png" alt="" width="420" height="294" align="left" style="margin:5px"/></p>

<p>拿我个人来说，很长一段时间以来都很忙，每周工作时间常常超过80个小时。虽然也知道<a href="http://blog.sina.com.cn/s/blog_5d7e3c150100h2c8.html">人生是玩5个球</a>之类的道理，但却并不觉得自己的选择有什么问题：目前确实有那么多事情需要处理，自己又很愿意花时间去处理它们。</p>

<p>旁边这张图是表达，有很多道理我是知道的。只不过认定了工作和生活没法兼得，所以我准备串行处理：工作的时候疯狂工作，生活的时候好好生活。这样我既不会遗憾该勤奋的时候不够勤奋，也不会觉得什么像样的生活都没有过过。</p>

<p>我从小就是这样：如果自己想做的事情，在喜欢的时间，就希望尽全力的做个痛快。而如果是在不对劲的时间逼迫我，再喜欢的事情也不想去做。</p>

<p>所以我崇尚的节奏是年轻时（我还年轻么？），工作上勤奋一些，生活上享受一些。人上了年纪，有很多乐趣还可以慢慢享受：比如看书、旅行等等，有很多乐趣就已经不复存在：比如工作、美食、踢球和别的什么羞羞的乐趣（这里是不是可以另外开一篇讨论&hellip;）。</p>

<p>这样的选择非常私人，很可能是错的。但在组织的层面，用输出来衡量大家产出，比一切别的制度都重要，这肯定是对的。</p>

<p>因为这样的制度是真正公平的。</p>

<p>很多厉害的人在选择工作、领导或者团队的时候，能分辨和规避那些糟糕的选择，但往往会搞不清nice和fair谁更重要。</p>

<p>提醒一下，nice是奴隶制时期奴隶主常常玩的把戏，fair才是商业社会运作的根基。</p>

<p>不分青红皂白要求你加班，到了下班时间迫于气氛大家都不好意思走的公司当然去不得。
但公司对大家都不错，经理对大家都不错，这样的地方对真正有追求的人也未必是好去处。</p>

<p>反过来，那些面试的时候会说“我们加班非常多哦”的公司，未必就不能去。如果他们的考核方式是公平的，做的东西你也感兴趣，加入的时间看起来又比较正确，那很可能比去一家茶水间堆满了糖果前台比你历任女朋友都漂亮的公司要明智得多。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Work Life Balance的神话]]></title>
    <link href="https://lenciel.com/2015/10/the-myth-of-work-life-balance/"/>
    <updated>2015-10-02T22:35:05+08:00</updated>
    <id>https://lenciel.com/2015/10/the-myth-of-work-life-balance</id>
    <content type="html"><![CDATA[<p><img src="/downloads/images/2015_10/work_life_balance.jpg" title="Don't touch me..." alt="work life balance" /></p>

<p>最近有几个事情让我在这方面想了很多。</p>

<p>首先是那篇在业界掀起轩然大波的关于<a href="http://www.nytimes.com/2015/08/16/technology/inside-amazon-wrestling-big-ideas-in-a-bruising-workplace.html">Amazon高压管理制度</a>的《纽约时报》封面文章。由Jodi Kantor和David Streitfeld耗时6个月调查了100名Amazon离职和在职员工的这篇文章，细数了Amazon企业文化里面充满达尔文主义味道的部分：</p>

<ol>
<li>末位淘汰，并且建立通道让员工将身边同事的表现秘报给共同的主管</li>
<li>对流产或者患癌员工不但不给予关心，还进行低绩效考评或者工作上边缘化</li>
<li>每周超长的工作时间，经常有凌晨的邮件，并且要求及时处理</li>
</ol>


<p>其中一个叫Molly Jay的前Kindle项目组成员讲述的故事我印象最深：她说因为要照顾患癌的父亲，<em>一周不能达到80个小时以上的工作时间</em>，绩效考评就迅速下滑。甚至在父亲临终前希望晚上和周末少一些加班，不但被主管拒绝，甚至当着她的面说她&#8221;是个麻烦&#8221;，最后她选择了离开。</p>

<p>然后是周三凌晨看曼联队的欧冠球赛，解说聊起范加尔对续约还在犹豫时说：64岁的范加尔对媒体坦言希望仔细考虑一下是否继续执教球队，因为自己陪家人的时间太少了。而就在之前，65岁的温格因为类似的原因，<a href="http://www.chinanews.com/ty/2015/09-24/7541283.shtml">和自己59岁的太太离婚了</a>。</p>

<p>最后是<a href="http://36kr.com/p/5038027.html">柳青患癌的消息</a>刷爆了创业圈之后终于又刷爆了朋友圈。含着金钥匙出生，哈佛毕业，投行背景，拼到滴滴总裁，却年纪轻轻遭此恶疾，比之前李开复患癌的消息更让人觉得唏嘘。</p>

<a name="L.........Work.Life.Balance"></a>
<h2>说好的Work Life Balance</h2>

<p>在包括四大、投行、建筑、广告、传媒等等需要打鸡血的职业里面，程序员大概算蛮幸运的：因为我们这行大多数公司还是比较推崇<a href="http://www.forbes.com/sites/kathryndill/2015/07/17/the-best-companies-for-work-life-balance-2/">Work Life Balance</a>的。</p>

<p>一方面是因为在这个行业，顶尖人才永远是卖方市场，供不应求。为了留住人才，公司纷纷开出更人性化的福利和政策。</p>

<p>上班与休假方面的规定就是一面镜子。这些年本座眼看着无限制的年休假从少量公司的福利慢慢成为硅谷创业公司的标配，更有Netflix豪迈的<a href="http://edu.qq.com/a/20150806/020001.htm">新生儿父母一年带薪产假</a>。这些政策都是有数据支撑的：Google的女员工带薪产假延长至22周后离职率下降了50%。</p>

<p>另一方面是一些广为人知的道理又被大家抬出来温习。</p>

<p>包括这次Amazon的新闻一出，先后参与了Facebook和Asana的创建，31岁就已经攒下79亿美刀身家的<a href="http://www.forbeschina.com/review/billionaires/home/106757.shtml">达斯汀·莫斯科维茨</a>就发了<a href="https://medium.com/life-learning/work-hard-live-well-ead679cb506d">一篇雄文</a>表达自己的态度：如果能够再来一次，他希望自己在创建Facebook的过程中能够过得轻松一些。</p>

<p>文章里面提到的那个一周不能工作超过40个小时的理论，我<a href="https://lenciel.com/2013/05/the-myth-of-productivity/">之前也唠叨</a>过。实际上这个结论福特在1926年就调查得出了，并且开始<a href="http://www.history.com/this-day-in-history/ford-factory-workers-get-40-hour-week">实施在自己的汽车厂</a>。</p>

<a name="L.........Work.Life.Balance......"></a>
<h2>说好的Work Life Balance呢？</h2>

<p>然而别人家的公司与你的公司总是有差别的。</p>

<p>如果没有这篇Amazon内幕以及之后引发的世界范围内的大吐槽，广大的天朝码农经常都沉浸在”为什么受伤的总是我“的悲伤气氛中。</p>

<p>没错，移动互联网火热之前，国内IT企业标杆多是华为。大家都狼得没边儿，猛打猛拼。现在BAT火了，也不忘贡献<a href="http://baike.baidu.com/view/12867952.htm">996</a>为代表的各种疯狂制度。</p>

<p>过去我要安慰大家，只好说其实不仅仅天朝这样：从我经历过的项目来看，东亚和美国的IT人士们都非常非常苦逼。闲到十八摸这种程度，很多美帝的工程师只要我在线他就在线；之前M记的韩国大老板说在三星工作的时候，公司在办公室边上修了很多公寓以便员工不回家直接进去续命；日本台湾的就更不用说了&hellip;</p>

<p>现在好了，发现其实全世界大多数从业者的日子都没什么大的区别（注意我这里说的从业者不包括各路水货混子嘴炮流选手），真是给了本座莫大的安慰。</p>

<p>还在M记的时候，<a href="https://lenciel.com/2012/03/do-not-burn-out-yourself/">我就挺关注burnout</a>的，因为自己确实有过经历，所以很怕带的团队里有小伙伴中招。</p>

<p>出来创业为了大家不搞出内伤，我们不打卡不搞绩效不规定上下班时间不限制休假长度。</p>

<p>但即便如此，圣杯般的Work Life Balance并没有发生：至少本座没有体验到。</p>

<p>事到如今我终于可以认定它是不可能做到的：从事实上看如此，从道理上讲也应该如此。</p>

<p>工作和生活是两件需要同一个主体，你，投入身心的事情。你可以把两件都做得马马虎虎，你可以把其中一件做得不错另一件做得挺糟，你也可以把其中一件做得出类拔萃另一件完全不做。但你没法两头都做好，因为没有平行世界。</p>

<p>觉得自己都能做好的人，一定是参考的样本太过于局限：很多时候你需要和自己差不多资质的选手比较，才能发现更多的专注意味着什么。而实际上大多数真正做好了的人，资质比你更好并且比你专注多了。</p>

<p>所以呢？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Agile and Scrum, the Love Story]]></title>
    <link href="https://lenciel.com/2015/03/agile-and-scrum/"/>
    <updated>2015-03-07T03:05:36+08:00</updated>
    <id>https://lenciel.com/2015/03/agile-and-scrum</id>
    <content type="html"><![CDATA[<p><img src="/downloads/images/2015_03/minime.png" title="Don't touch me..." alt="Vhost threshold" /></p>

<p>本次吐槽献给Scrum Master们。毕竟了解了软件社区其实对Agile和Scrum的情绪已经有些像走到结尾的爱情故事，也许可以让大家在工作中不要把自己和大家SM得太惨。加上我们进新公司之后也在推行敏捷流程，不如整理一下本座对这套东西好鬼复杂的情绪&hellip;</p>

<p>Agile，中文翻译为“敏捷”，是在90年代逐渐引起广泛关注的一系列新型软件开发方法的总称。其中“敏捷”的语义主要是指应对快速变化的需求。</p>

<p>敏捷思想发展到顶峰的标志是<a href="http://www.agilemanifesto.org/history.html">Agile Manifesto</a>的正式定稿。当时大概谁也没有想到，2001年二月这群敏捷方法发起者和实践者在美国犹他州雪鸟滑雪圣地的一次聚会后的产物，能在软件工程和方法论范畴独领风骚这么多年。</p>

<p>但敏捷再好，它毕竟是人写的不是神写的，也会随着技术的不断革新慢慢变得过时。类似的，<a href="http://en.wikipedia.org/wiki/Scrum_(software_development">Scrum</a>这种用于实践敏捷的开发流程虽然也大红大紫了这么多年，但它也暴露出了不少缺陷。</p>

<a name="L......................................."></a>
<h2>瀑布文档过多，敏捷文档过少</h2>

<p>世界<a href="http://book.douban.com/subject/1867642/">变平了</a>之后，大多数的公司团队是分散在多处的。即便是TestBird这样没有超过100人的公司，办公地点也分布在多个国家和地区。而在编写Agile指南的2001年，<del>本座还细皮嫩肉</del>，Subversion还是新鲜货，Git还没有被发明，Skype这类VoIP的方案还没有出现，云还仅仅是用来下雨的。因此<a href="http://www.agilemanifesto.org/principles.html">里面说到</a>：</p>

<blockquote>
<p>在开发小组中最有效率也最有效果的信息传达方式是面对面的交谈</p>
</blockquote>


<p>当然，值得一提的是强调沟通本来就不是Agile的发明。在Agile Manifesto刚刚被编写出来时还占据着主流的<a href="http://en.wikipedia.org/wiki/Waterfall_model">瀑布式开发</a>里，要求编码开始前撰写非常详细的文档，然后再对这些文档进行充分的评审：沟通和讲解其实是完成这些工作的前提。只不过Agile不但高度推崇面对面的交流，而且鄙视文档活动，结果虽然在一定程度上减少了瀑布流程里面写文档写到程序员晕厥的状况，但又对公司造成了新一轮的伤害。</p>

<a name="L..........................."></a>
<h3>讨论之后还得多写写</h3>

<p>在软件开发中，有些工作通过口头交流本身就是低效的。</p>

<p>当然有适合面对面讨论的部分：比如对关键模块的技术选型，比如对业务流程和需求的澄清。</p>

<p>但进入设计和实现阶段的活动，应该是看得见摸得着版本化可回溯的，所谓&#8221;a wireframe is worthy than one thousand words，a prototype is worth a thousand wireframes&#8221;。</p>

<p>比如下面是一次提交之后Gitlab上提供的查看diff的界面：通过这样的方式review整个改动，比小伙伴坐在自己怀里结对编码要清楚得多（而且小伙伴坐在怀里的时候引发的羞赧常常让你难以把他的错误直接打到他脸上不是么）：</p>

<p><img src="/downloads/images/2015_03/gitlab_diff.png" title="Don't touch me..." alt="Vhost threshold" /></p>

<p>所以我会经常在公司里面鼓动大家把输出都落到代码和文档里面。经过一段时间，就会慢慢看到有人在群里面问“那个什么什么是怎么回事”的时候，后面的回复是“你去看看confluence上xxx页面”或者是“这个是jira的xxx问题单讨论的”。</p>

<p><img src="/downloads/images/2015_03/written_words_is_better.png" title="Don't touch me..." alt="Vhost threshold" /></p>

<p>如果你的员工经常需要重复回答同一个问题，包括来个新员工这个环境怎么配那个Wifi的密码还需要人告诉他/她，你也好意思说自己是敏捷的？</p>

<a name="L..........................."></a>
<h3>讨论之前最好多写写</h3>

<p>强调面对面沟通，而弱化文档和代码本身在沟通中的作用，造成的一个更严重后果是面对一个问题，大家不仔细思考就开会讨论。结果会上随便放炮，下来各不认账。</p>

<p>我在M记做PM的时候，项目组里面有几位韩国同事。因为是远程办公，每天除开代码之外，我们只能通过Skype交流。这里面有个叫Jason的同事，无论分给他什么活，他不但做得飞快，而且还会以<a href="https://www.atlassian.com/software/confluence">Confluence</a>上一篇甚至几篇洋洋洒洒的文章作为交付。</p>

<p>在回顾那个项目的时候我发现，我和他没有每日站会，没有Sprint结尾的demo，但我们之间的沟通是整个团队里面最高效的：每天查看他提交的代码和文档，我就非常清楚他的进度和问题了。</p>

<p>这样做的收益并不仅仅是我们之间沟通的高效。</p>

<p>在他第三个小孩儿出生之后一周，他搞定了一个非常复杂的调研任务。聊天的时候我问他怎么可以在那么多私事需要处理的情况下弄得这么快。他说，有很多时候在confluence上写着写着，自己的思路就清晰了。</p>

<p>这也是我自己的感受。很多次我在写邮件问其他人问题的时候，邮件写完自己就有了答案。我自己呆过的团队，厉害的工程师都非常能写：他们的区别不过是有些人只记录给自己看，有些人会写给大家看。</p>

<a name="L.........................................."></a>
<h2>流程、工具和个体究竟谁更重要</h2>

<p>前面说了技术的革新使“面对面沟通”的重要性变得过时和有害。那么下面这个Agile核心思想呢：</p>

<blockquote>
<p>个体和个体间的交流比流程和工具更重要</p>
</blockquote>


<p>我自己对这种“人定胜天”的论调天生有抗拒感。就像当年主席发明这句话是因为大家日子过得足够糟一样，只有你为团队提供的工具足够糟才需要这么去忽悠大家。</p>

<p>软件开发是一项和工具高度相关的工作。除去你的生产活动的效率很大程度上取决于你对工具的熟悉程度以外，你还需要使用工具参与到流程中：和其他人交流、配环境、提单、解bug、记录工作时间等等，都离不开工具。</p>

<p>无论你的团队好好工作的意愿多么强烈，如果你还在用sametime而不是slack，还在用破破烂烂自己开发的测试用例管理工具而不是rally，你的开发流程就是不如别人顺畅。</p>

<p>因为使用的工具可以“塑造”你的团队沟通的方式（反过来你团队沟通的方式也可以塑造<a href="http://haacked.com/archive/2013/05/13/applying-conways-law.aspx/">他们使用工具的方式</a>）。</p>

<p>这也就是<a href="http://en.wikipedia.org/wiki/Marshall_McLuhan">Marshall McLuhan</a>的著名论断<code>The medium is the message</code> （<a href="http://www.wired.com">Wired</a>杂志把他视为办刊的精神导师，我觉得搞互联网的人都该看看他的书）:</p>

<p><img src="/downloads/images/2015_03/mcluhan.jpg" title="Don't touch me..." alt="Vhost threshold" /></p>

<a name="Daily.StandUp.or.Daily.FuckUp"></a>
<h2>Daily StandUp or Daily FuckUp</h2>

<blockquote>
<p>市场销售人员和开发人员应该在整个项目过程中每天都在一起工作</p>
</blockquote>


<p>首先，严格的区分市场销售人员和开发人员本身就是个糟糕的主意。</p>

<p>其次，“每天都在一起”也是奇怪的号召，而在Scrum流程中，这种奇怪的号召被具体化，成了每日站会。我经常在参与站会的时候听到小兄弟们说的其实是“我昨天说我要三天做完的事情，真的还要两天”。作为职业玩家，职业程度很多时候就体现在不需要每天都告诉其他人自己要怎么做。可以想象一下830每天开个站会，然后梅西说，我今天可能需要在训练里面给伊涅斯塔传5个过顶球，你做好胸部停球转身抽射的准备……</p>

<a name="L............"></a>
<h2>敏捷文化</h2>

<p>我本身是挺讨厌“方法论”者和他们发明的术语的。当然，可能也不是我一个人讨厌。参与了Agile Manifesto制定的Dave Thomas在<a href="http://pragdave.me/blog/2014/03/04/time-to-kill-agile/">Agile Is Dead</a>里面说过：</p>

<blockquote>
<p>I haven’t participated in any Agile events, I haven’t affiliated with the Agile Alliance, and I haven’t done any “agile” consultancy. I didn’t attend the 10th anniversary celebrations.</p>
<p>Why? Because I didn’t think that any of these things were in the spirit of the manifesto we produced&#8230;</p>
<p>The word “agile” has been subverted to the point where it is effectively meaningless, and what passes for an agile community seems to be largely an arena for consultants and vendors to hawk services and products.</p>
</blockquote>


<p>在我看来，就好比真正明白某个知识的人总是能用大白话把你讲明白一样，在敏捷开发流程里面被某些公司鼓吹的那些活动和术语在我看来都是些没有价值的东西（ThoughtWorks，说你呢！）。</p>

<p>比如Scrum，我从来不说我们用Scrum，而说我们搞迭代（如果和老外我也说iteration而不是Scrum）。
比如Sprint，我从来不喜欢说我们这个Sprint，而是说我们这个迭代。
迭代本身是个有语义的好词语，为什么不用它呢。</p>

<p>就像Gregg Caines在<a href="http://caines.ca/blog/2014/12/02/i-dont-miss-the-sprint/">这篇文章</a>里面说的一样：</p>

<blockquote>
<p>when you want to get people to change the way they work, and you want them to understand the completely foreign concepts you’re bringing to them, it’s absolutely crucial that you name the thing in a way that also explains what it is not.</p>
</blockquote>


<p>然后他还说：</p>

<blockquote>
<p>In Scrum, it’s also common to have a “sprint commitment” where the team “commits” to a body of work to accomplish in that time frame. The commitment is meant to be a rough estimate for the sake of planning purposes, and if a team doesn’t get that work done in that time, it tries to learn from the estimate and be more realistic in the next sprint. Developers are not supposed to be chastized [sic] for not meeting the sprint commitment — it’s just an extra piece of information to improve upon and to use for future planning. Obviously naming is hugely important here too, because in every other use of the word, a “commitment” is a pledge or a binding agreement, and this misnomer <em>really</em> influences the way people (mis)understand the concept of sprints. Let’s face it: if people see sprints as just more frequent deadlines (including those implementing them), the fault can’t be entirely theirs.</p>
</blockquote>


<p>的确，问工程师要个estimation然后把它当成commitment，这不是耍流氓么。不仅仅是Scrum，大多数的组织里面推行一年半载的敏捷流程，大多数人还是对它究竟每个阶段在干什么迷迷糊糊。即便是靠培训敏捷流程混饭的公司也<a href="http://martinfowler.com/articles/agileFluency.html">承认</a>要把他们鼓吹的流程落地是非常难的：</p>

<blockquote>
<p>In our experience, it takes a team two to six months to become fluent at the one-star level. About 45% of the teams we talk to say they’re fluent at this level.</p>
<p>Reaching the two-star level takes another three to 24 months, depending on the amount of technical debt in the code. About 35% of teams report fluency at this level.</p>
<p>Three-star teams are much more rare. About 5% of teams report fluency at this level. We’ve heard reports ranging from a year to five years to reach this level of fluency.</p>
</blockquote>


<a name="L..............."></a>
<h2>我们的选择</h2>

<p>敏捷开发的很多思想是有益的，但我们没有用Scrum和它那堆奇怪的活动（standup、sprint planning等等）。我们鼓励少开会，多通过<a href="http://tomayko.com/writings/adopt-an-open-source-process-constraints">异步的方式沟通</a>而不是经常让大家停下手里的工作来进行讨论。我们也从来不对estimation之类的东西认真，更不去做什么burndown或者计算点数，因为Agile Manifesto里面说过：</p>

<blockquote>
<p>可以工作的软件是进度的主要度量标准</p>
</blockquote>


<p>自动化测试、持续集成、自动部署、有效的监控和运维，让你的软件随时可以发布，才是产品可以不断演进的根基。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Disappointment & Confidence]]></title>
    <link href="https://lenciel.com/2015/02/the-confidence-and-disappointment/"/>
    <updated>2015-02-28T14:02:26+08:00</updated>
    <id>https://lenciel.com/2015/02/the-confidence-and-disappointment</id>
    <content type="html"><![CDATA[<p>I wrote this in English because it is a habbit I have: when I&rsquo;m frustrated, I wrote in English.</p>

<p>It feels safer and warmer because it seems no one will take time to read it carefully when the language is switched.</p>

<p>Today one of our freind told me she decides to resign to brew her drawing skill dedicatedly. She is working with us since Myriad, then Palm4fun, then Testbird. And she is not just a colleague for us, but a talent, honest freind. So I feel kinda upset.</p>

<p>But I know it will happen sooner or later since we join Testbird.</p>

<p>It doesn&rsquo;t have to be her, but it will happen.</p>

<p>It doesn&rsquo;t have to be Testbird, but it will happen.</p>

<p>I know it because everytime when you join a new team you will have the disappointment and confidence problem.</p>

<p>On the very first day of the new job. When you walk in the building knowing practically no one. Everyone is pleasant and nice… almost too nice. Everyone (including you) is not quite themselves because everyone understands the power of the first impression. They’re watching every single move and attempting to interpret how these moves might be perceived. It’s exhausting and it doesn’t reflect the natural steady state of the team.</p>

<p>You listen. You talk to every single person who is willing and you slowly form the impression of the tangible and intangible aspects of this group of people. A picture slowly forms in your mind of how it fits together and, as an aside, it’s almost always wrong because your brain hates discord. As quickly as possible, your brain wants a framework that efficiently predicts what is going to happen next. Your initial framework is a calming hodgepodge of past experience combined with your three most recent epiphanies, and you call this weak sauce, “The way they work.”</p>

<p>And this poor assessment goes both ways. It’s the beginning of the disappointment. You discover your model for them is incorrect. They discover that you are not who they expected. It’s the end of the honeymoon and the fact the end has begun is progress, but it mostly feels like disappointment. You’re in an unfortunate hole. It’s buyer’s remorse. It’s understanding the world is never, ever that simple.</p>

<p>You sense their disappointment, so you listen harder. You push yourself to talk with a wider variety of unfamiliar humans, because you continue to erroneously believe that one of them could tell you that elusive one rule that would explain this particular clan’s culture in a immediately useful and revealing way. You read every decrepit wiki page. You attend every meeting. You’re attempting to rebuild yourself in a new culture and it’s exhausting because you took all of this for granted in your prior gig. You had built blazing fast intuition, but it took months&hellip;perhaps years.</p>

<p>Or maybe never.</p>

<p>How can you start climbing out of the disappointment? The only way I know is through small, unexpected wins.</p>

<p>Find something small enough that you can fix it without breaking other things.</p>

<p>No one expected you to fix that; no one even knew it was broken; and no one thought it was that important. When you fixed it, no one really noticed. When the consequences of the fix became obvious, they thought, “She/He can do that? Hmmm&hellip;.interesting.”</p>

<p>Your fix is your first legitimate reputation defining moment, because while people were told who you were, they didn’t believe it because people don’t believe what they have not seen.</p>

<p>Disappointment vanishes slowly and quietly each of these small wins. The wins don’t feel substantive or impactful, but they continue to incrementally define who you are to the rest of the team. They start to build a realistic model of you in their minds. You’re not who they expected, it’s not what you expected, but after three months you start to think of this strange place as home.</p>

<p>I wish all the best for her and hope she take the time to relax and learn, and come back not just with her enhanced UX expertise, but also with the knowledge that everybody boarding on a new ship will have the same disappointment problem and you can always conquer it with small wins.</p>

<p>Good Luck!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TLDR是什么?]]></title>
    <link href="https://lenciel.com/2014/11/the-stories-of-the-bible-in-tldr-form/"/>
    <updated>2014-11-24T10:47:31+08:00</updated>
    <id>https://lenciel.com/2014/11/the-stories-of-the-bible-in-tldr-form</id>
    <content type="html"><![CDATA[<p><img src="/downloads/images/2014_11/bible_story.png" title="Don't touch me..." alt="Vhost threshold" /></p>

<p>很多人问什么是<code>TL;DR</code>，其实是<code>Too long, didn't read</code>的缩写，一般用来暗示下面是一段摘要，如果你对这长得要死的文章的细节没兴趣，读读它就可以了。</p>

<p>比如我很喜欢的tumblr站<a href="http://tldrwikipedia.tumblr.com/">TL;DR WIKIPEDIA</a>，其实就是魔鬼辞典好不好。再比如昨天在Reddit上的红贴<a href="http://www.reddit.com/r/Christianity/comments/2mpv2r/the_stories_of_the_bible_in_tldr_form/">圣经故事TLDR版本</a>，读起来也很好玩：</p>

<p><strong>创世纪</strong></p>

<ul>
<li>上帝：好了，你们俩，不许干那事儿。除开那件事，你们要怎么疯都可以。</li>
<li>亚当和夏娃：好的。</li>
<li>撒旦：你们就该干那事儿。</li>
<li>亚当和夏娃：好的。</li>
<li>上帝：咋了？</li>
<li>亚当和夏娃：我们干了那事儿。</li>
<li>上帝：我嬲&hellip;&hellip;</li>
</ul>


<p><strong>旧约</strong></p>

<ul>
<li>上帝：你们是我的子民，你们不该干这些事儿。</li>
<li>人们：我们不会再干了。</li>
<li>上帝：好样的。</li>
<li>人们：我们又干了。</li>
<li>上帝：我嬲&hellip;&hellip;</li>
</ul>


<p><strong>福音</strong></p>

<ul>
<li>耶稣：我是上帝之子，虽然你们又干了那些事儿，上帝和我依然爱你们也希望你们活下去。但不能再干那些事儿了。</li>
<li>被治愈的人们：好的！谢谢！</li>
<li>其他人：我们是从木有见过这厮干那些事儿，但是没人看到的时候，说不定他也在干那些事儿。</li>
<li>耶稣：我从木有干过那些事儿。</li>
<li>其他人：我们得审判你。</li>
<li>彼拉多：你有木有干那事儿。</li>
<li>耶稣：木有。</li>
<li>彼拉多：他木有干过。</li>
<li>其他人：还是杀了算了吧。</li>
<li>彼拉多：好的。</li>
<li>耶稣：我嬲&hellip;&hellip;</li>
</ul>


<p><strong>保罗的信件</strong></p>

<ul>
<li>人们：我们干了那些事儿。</li>
<li>保罗：耶稣还是爱你们，而且因为你们也爱他，你们必须停止干这些事儿了。</li>
<li>人们：好的。</li>
</ul>


<p><strong>保罗的信件II</strong></p>

<ul>
<li>人们：我们又干了那些事儿。</li>
<li>保罗：我嬲&hellip;&hellip;</li>
</ul>


<p><strong>启示录</strong></p>

<ul>
<li>约翰：当耶稣复生的时候，就不会再有人干那些事儿了。现在，人们就该开始停止干那些事儿了。</li>
</ul>

]]></content>
  </entry>
  
</feed>
